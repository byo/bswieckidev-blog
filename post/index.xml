<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Just a dev blog</title><link>https://blog.bswiecki.dev/post/</link><description>Recent content in Posts on Just a dev blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 19 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.bswiecki.dev/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Multi-CPU Github Actions with Go</title><link>https://blog.bswiecki.dev/post/2022-07-19-multi-cpu-github-actions-with-go/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://blog.bswiecki.dev/post/2022-07-19-multi-cpu-github-actions-with-go/</guid><description>When we think about CPU architecture usually there&amp;rsquo;s one leader that comes to our mind - the famous x86-64 one. It is the main player on our desktops and on the server side. Even more recent generation of game consoles switched to that architecture from some more exotic ones.
But there are alternatives. Some are pretty well known such as the ARM one that took over the mobile market (and slowly enters the desktop world with Apple M1 laptops).</description></item><item><title>K-DAG University</title><link>https://blog.bswiecki.dev/post/2019-07-14-k-dag-university/</link><pubDate>Sun, 14 Jul 2019 00:00:00 +0000</pubDate><guid>https://blog.bswiecki.dev/post/2019-07-14-k-dag-university/</guid><description>Last time I briefly described the knowledge in the form of a Graph structure. Each term having set of prerequisites is a node in this graph, each dependency is a directed edge in such graph.
Now let&amp;rsquo;s assume this graph is a directed acyclic one and there are no terms which form a cycle of dependencies. In reality I don&amp;rsquo;t believe this to be true but it does simplify reasoning and can definitely be achieved locally for larger terms.</description></item><item><title>Knowledge DAG</title><link>https://blog.bswiecki.dev/post/2019-07-10-knowledge-dag/</link><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid>https://blog.bswiecki.dev/post/2019-07-10-knowledge-dag/</guid><description>If I have some specific problem to solve, I find technology that seems relevant, then I scan the Internet for some basic introduction, then some tutorial, then documentation.
My usual problem is that the issue I want to solve is usually not in the introduction nor the tutorial. I rarely find ready-to-use solution and unfortunately I tend to really dislike adjusting my idea to what you can easily achieve with tutorial-like solutions.</description></item><item><title>Boot</title><link>https://blog.bswiecki.dev/post/2019-07-06-booting-up/</link><pubDate>Sat, 06 Jul 2019 00:00:00 +0000</pubDate><guid>https://blog.bswiecki.dev/post/2019-07-06-booting-up/</guid><description>Yeah, one of the hardest things - materialize your thoughts.
We&amp;rsquo;re living in a world full of digital content. People write, produce, record, put so many things into the Internet that it&amp;rsquo;s very easy to just get lost in all this informational chaos. Will this blog share the same fate? Most likely, not going to lie here.
Honestly I&amp;rsquo;m not sure if the information I could throw into the big information highway will be that meaningful.</description></item></channel></rss>